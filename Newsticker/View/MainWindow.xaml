<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Newsticker"
        xmlns:controls="clr-namespace:Newsticker.Controls"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="Newsticker.View.MainWindow"
        Title="Newsticker"
        WindowStyle="None" 
        Height="460"
        Width="750"
        ResizeMode="NoResize"
        WindowState="Maximized">
    <Window.Resources>
        <SolidColorBrush x:Key="VisualStudioGray" Color="#FF2D2D30"/>
        <SolidColorBrush x:Key="VisualStudioDarkGray" Color="#FF1E1E1E"/>
        <SolidColorBrush x:Key="VisualStudioLightGray" Color="#FF3F3F46"/>
        <Style x:Key="DockButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource VisualStudioLightGray}"/>
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource VisualStudioDarkGray}"/>
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>-->
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource VisualStudioDarkGray}"/>
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>-->
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MyButton" TargetType="{x:Type Button}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                            Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background"  Value="{StaticResource VisualStudioLightGray}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource VisualStudioDarkGray}"/>
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CloseButton" TargetType="{x:Type Button}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                            Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FFF14742"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource VisualStudioDarkGray}"/>
                                <!--<Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle StrokeDashArray="1 2" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" Margin="2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="{StaticResource VisualStudioDarkGray}" BorderThickness="0" BorderBrush="{StaticResource ComboBox.Static.Border}">
                            <Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                                <Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center" Fill="{StaticResource ComboBox.Static.Glyph}" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource VisualStudioLightGray}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource VisualStudioLightGray}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource VisualStudioDarkGray}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource VisualStudioLightGray}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource VisualStudioLightGray}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource VisualStudioLightGray}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}" FontWeight="Bold"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                </ContentPresenter>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background" Color="#1F26A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border" Color="#A826A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" Color="#FF3F3F46"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" Color="#FF3F3F46"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border" Color="#99006CD9"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border" Color="#FFDADADA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background" Color="#FF3F3F46"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Border" Color="#FF26A0DA"/>
        <Style x:Key="ComboBoxItemStyle1" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF3F3F46"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewFocus.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Border}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="DarkGray">
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <DockPanel MouseLeftButtonDown="DockPanel_MouseLeftButtonDown" Background="{StaticResource VisualStudioGray}" FlowDirection="RightToLeft">
            <!--FlowDirection RightToLeft so the Buttons can Overlay the Buttons-->
            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" MinWidth="152" Background="{StaticResource VisualStudioGray}">
                <Button Command="{Binding CloseCommand}" Background="Transparent"  BorderThickness="0" Style="{StaticResource CloseButton}">
                    <Image Source="/Images/close.png" Margin="10"/>
                </Button>
                <Button Command="{Binding RestoreCommand}" Style="{StaticResource MyButton}">
                    <Image Source="{Binding RestoreButton}"  Margin="9"/>
                </Button>
                <Button Command="{Binding MinimizeCommand}" Style="{StaticResource MyButton}"  >
                    <Image Source="/Images/minimize.png" Margin="10"/>
                </Button>
            </StackPanel>
            
            <StackPanel Orientation="Horizontal" FlowDirection="LeftToRight" HorizontalAlignment="Right">
                <Button Command="{Binding UpdateCommand}"  Style="{StaticResource MyButton}">
                    <Image Source="/Images/newspaper.png" Margin="2"/>
                </Button>
                <ToggleButton Command="{Binding ZeitCommand}" Style="{StaticResource DockButton}" IsChecked="{Binding ZeitChecked}">
                    <Image Source="/Images/zeit.png" Margin="5,8,5,6"/>
                </ToggleButton>
                <ToggleButton Command="{Binding FAZCommand}" Style="{StaticResource DockButton}" IsChecked="{Binding FAZChecked}">
                    <Image Source="/Images/faz.png" Margin="5,7,5,2"/>
                </ToggleButton>
                <ToggleButton Command="{Binding SZCommand}" Style="{StaticResource DockButton}" IsChecked="{Binding SZChecked}">
                    <Image Source="/Images/sz.png" Margin="5,10,5,3"/>
                </ToggleButton>
                <ToggleButton Command="{Binding NZZCommand}" Style="{StaticResource DockButton}" IsChecked="{Binding NZZChecked}">
                    <Image Source="/Images/nzz.png" Margin="5,10,5,3"/>
                </ToggleButton>
                <ToggleButton Command="{Binding TagesschauCommand}" Style="{StaticResource DockButton}" IsChecked="{Binding TagesschauChecked}">
                    <Image Source="/Images/tagesschau.png" Margin="5,9,5,3"/>
                </ToggleButton>
                <ToggleButton Command="{Binding CNNCommand}" Style="{StaticResource DockButton}" IsChecked="{Binding CNNChecked}">
                    <Image Source="/Images/cnn.png" Margin="5,9,5,8"/>
                </ToggleButton>
                <Grid Margin="120,0,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Image Source="/Images/text_size.png"/>
                    <Slider Minimum="12" Maximum="17" Width="200" Value="{Binding FontSize, Mode=TwoWay}" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1"/>
                </Grid>
            </StackPanel>
                
        </DockPanel>
        <Grid Grid.Row="1" Background="{StaticResource VisualStudioDarkGray}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="*" MaxWidth="300"/>
            </Grid.ColumnDefinitions>
            <Label Content="Such dir eine Zeitung aus und Los gehts :)" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding WelcomeTextVisibility}"/>
            <ScrollViewer VerticalScrollBarVisibility="Visible">
                <ItemsControl ItemsSource="{Binding Articles}" Grid.Column="0" x:Name="PART_ItemsControl">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal" HorizontalAlignment="Left"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="0,5,0,5"  Width="530" Grid.RowSpan="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MaxWidth="200"/>
                                    <ColumnDefinition Width="*" MinWidth="300"/>
                                </Grid.ColumnDefinitions>
                                <Image Source="{Binding ImageSource}" 
                                       Grid.Column="0" 
                                       Grid.RowSpan="5"
                                       Margin="5"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center" MaxHeight="120"/>
                                <Grid Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Column="1">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Text="{Binding Date, StringFormat=\{0:dd.MM.yyyy | HH:mm U\\hr\}}" 
                                           Foreground="White"
                                           Grid.Column="1" Grid.Row="0" FontSize="{Binding ElementName=PART_ItemsControl, Path=DataContext.FontSize}"/>
                                        <TextBlock Text="{Binding Header}"
                                           Foreground="White"
                                       Grid.Row="1"
                                       Grid.Column="1"
                                       TextWrapping="Wrap"
                                       FontWeight="Bold"
                                                   FontSize="{Binding ElementName=PART_ItemsControl, Path=DataContext.FontSize}"/>
                                        <TextBlock VerticalAlignment="Top"
                                           Foreground="White"
                                       Grid.Row="2"
                                       Grid.Column="1"
                                       TextWrapping="Wrap" MaxHeight="65" FontSize="{Binding ElementName=PART_ItemsControl, Path=DataContext.FontSize}">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="Text" Value="{Binding Summary}"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Summary}" Value="{x:Null}">
                                                            <Setter Property="Text" Value="Dieser Artikel bietet leider keine Vorschau."/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Grid>
                                    <TextBlock Grid.Row="1" VerticalAlignment="Top" FontSize="{Binding ElementName=PART_ItemsControl, Path=DataContext.FontSize}"><Hyperlink NavigateUri="{Binding Link}" RequestNavigate="Hyperlink_RequestNavigate"><Run Text="Zum Artikel"/></Hyperlink></TextBlock>
                                </Grid>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <StackPanel  Orientation="Vertical">
                    <!--location-->
                    <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="0" HorizontalAlignment="Center">
                        <TextBlock Text="Wetter in" Foreground="White" VerticalAlignment="Center" FontSize="{Binding FontSize}"/>
                        <ComboBox ItemsSource="{Binding WeatherLocationsList}" 
                          SelectedItem="{Binding WeatherLocationsList.Current, Mode=TwoWay}" 
                          SelectionChanged="ComboBox_SelectionChanged" HorizontalAlignment="Left"
                          Style="{DynamicResource ComboBoxStyle1}"
                          Foreground="White" ItemContainerStyle="{DynamicResource ComboBoxItemStyle1}" FontSize="{Binding FontSize}">
                            <ComboBox.Resources>
                                <!-- Colour of ComboBoxItem -->
                                <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="#FF2D2D30" />
                                <!-- Mouse over colour of ComboBoxItem -->
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FF3F3F46" />
                            </ComboBox.Resources>
                            <ComboBox.Background>
                                <StaticResource ResourceKey="VisualStudioLightGray"/>
                            </ComboBox.Background>
                        </ComboBox>
                    </StackPanel>
                    <!--updatetime-->
                    <TextBlock Text="{Binding Weather.UpdateTime, StringFormat=\{0:Ak\\tuali\\sier\\t: dd.MM.yyyy HH:mm U\\hr\}}" Grid.Row="1" Grid.ColumnSpan="2" Foreground="White" HorizontalAlignment="Center" />
                    <!--current weather-->
                    <Grid HorizontalAlignment="Stretch" Margin="10,10,10,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="{Binding Weather.Temperature}" Foreground="White" FontSize="35" VerticalAlignment="Bottom" />
                            <TextBlock Text="{Binding Weather.Feel, StringFormat=Gefühlt: \{0\}}" Grid.Row="1" Grid.ColumnSpan="2" Foreground="White" HorizontalAlignment="Center" FontSize="{Binding FontSize}"/>
                        </Grid>
                        <Grid Grid.Column="1" Grid.RowSpan="2" HorizontalAlignment="Right" Margin="0,2,10,10" >
                            <Image Source="{Binding Weather.ImageSource}"  HorizontalAlignment="Right" Height="50"/>
                        </Grid>
                    </Grid>
                    <!--more information-->
                    <Grid HorizontalAlignment="Stretch" Margin="10,10,10,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Tiefsttemperatur: " Foreground="White" HorizontalAlignment="Left" Grid.Row="0" Grid.Column="0" FontSize="{Binding FontSize}"/>
                        <TextBlock Text="{Binding Weather.Low}" Foreground="White" HorizontalAlignment="Right" Grid.Row="0" Grid.Column="1" FontSize="{Binding FontSize}"/>
                        <TextBlock Text="Höchsttemperatur: " Foreground="White" HorizontalAlignment="Left" Grid.Row="1" Grid.Column="0" FontSize="{Binding FontSize}"/>
                        <TextBlock Text="{Binding Weather.High}" Foreground="White" HorizontalAlignment="Right" Grid.Row="1" Grid.Column="1" FontSize="{Binding FontSize}"/>
                        <TextBlock Text="Taupunkt: " Foreground="White" HorizontalAlignment="Left" Grid.Row="2" Grid.Column="0" FontSize="{Binding FontSize}"/>
                        <TextBlock Text="{Binding Weather.DewPoint}" Foreground="White" HorizontalAlignment="Right" Grid.Row="2" Grid.Column="1" FontSize="{Binding FontSize}"/>
                        <TextBlock Text="Luftfeuchtigkeit: " Foreground="White" HorizontalAlignment="Left" Grid.Row="3" Grid.Column="0" FontSize="{Binding FontSize}"/>
                        <TextBlock Text="{Binding Weather.RelativeHumidity}" Foreground="White" HorizontalAlignment="Right" Grid.Row="3" Grid.Column="1" FontSize="{Binding FontSize}"/>
                        <TextBlock Text="Luftdruck: " Foreground="White" HorizontalAlignment="Left" Grid.Row="4" Grid.Column="0" FontSize="{Binding FontSize}"/>
                        <TextBlock Text="{Binding Weather.Pressure}" Foreground="White" HorizontalAlignment="Right" Grid.Row="4" Grid.Column="1" FontSize="{Binding FontSize}"/>
                    </Grid>
                    <TextBlock Text="Wettervorhersage" Foreground="White" HorizontalAlignment="Center" FontWeight="Bold" Margin="10,10,10,0" FontSize="{Binding FontSize}"/>
                    <!--weather forecast-->
                    <StackPanel HorizontalAlignment="Stretch" Margin="10,10,10,0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding Weather.NextWeekDay}" Foreground="White" HorizontalAlignment="Left" FontSize="{Binding FontSize}"/>
                            <TextBlock Text="{Binding Weather.NextDayInfo}" Foreground="White" Grid.Row="1" HorizontalAlignment="Left" Margin="0,0,0,5" FontSize="{Binding FontSize}"/>
                            <Image Source="{Binding Weather.NextDayImageSource}" Grid.RowSpan="2" Grid.Column="1" Height="25" HorizontalAlignment="Right" Margin="10,0,0,0"/>
                            <TextBlock Text="{Binding Weather.OverNextWeekDay}" Foreground="White" Grid.Row="2" HorizontalAlignment="Left" FontSize="{Binding FontSize}"/>
                            <TextBlock Text="{Binding Weather.OverNextDayInfo}" Foreground="White" Grid.Row="3" HorizontalAlignment="Left" Margin="0,0,0,5" FontSize="{Binding FontSize}"/>
                            <Image Source="{Binding Weather.OverNextDayImageSource}" Grid.Row="2" Grid.RowSpan="2" Grid.Column="1" Height="25" HorizontalAlignment="Right" Margin="10,0,0,0" />
                            <TextBlock Text="{Binding Weather.OverOverNextWeekDay}" Foreground="White" Grid.Row="4" HorizontalAlignment="Left" FontSize="{Binding FontSize}"/>
                            <TextBlock Text="{Binding Weather.OverOverNextDayInfo}" Foreground="White" Grid.Row="5" HorizontalAlignment="Left" Margin="0,0,0,5" FontSize="{Binding FontSize}"/>
                            <Image Source="{Binding Weather.OverOverNextDayImageSource}" Grid.Row="4" Grid.RowSpan="2" Grid.Column="1" Height="25" HorizontalAlignment="Right" Margin="10,0,0,0" />
                        </Grid>
                    </StackPanel>
                </StackPanel>
                <!--logo of the weather service-->
                <Grid  Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Wetter von" Grid.Column="0" Foreground="White" VerticalAlignment="Center"/>
                    <Image Source="/Images/weatherzone.png"  Grid.Column="1" MaxHeight="24"/>
                </Grid>
                <Grid Visibility="{Binding WeatherSpinnerVisibility}" Grid.Row="0" Background="{StaticResource VisualStudioDarkGray}">
                    <controls:SpinnerControl2 VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Grid>
            </Grid>
            <!--<Grid Grid.Column="1" Margin="5,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto" MaxHeight="70"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="0">

                    <TextBlock Text="Wetter in" Foreground="White" VerticalAlignment="Center"/>
                    <ComboBox ItemsSource="{Binding WeatherLocationsList}" 
                          SelectedItem="{Binding WeatherLocationsList.Current, Mode=TwoWay}" 
                          SelectionChanged="ComboBox_SelectionChanged" HorizontalAlignment="Left"
                          Style="{DynamicResource ComboBoxStyle1}"
                          Foreground="White" ItemContainerStyle="{DynamicResource ComboBoxItemStyle1}">
                        <ComboBox.Resources>
                            -->
            <!-- Colour of ComboBoxItem -->
            <!--
                            <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="#FF2D2D30" />
                            -->
            <!-- Mouse over colour of ComboBoxItem -->
            <!--
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FF3F3F46" />
                        </ComboBox.Resources>
                        <ComboBox.Background>
                            <StaticResource ResourceKey="VisualStudioLightGray"/>
                        </ComboBox.Background>
                    </ComboBox>
                </StackPanel>

                <TextBlock Text="{Binding Weather.UpdateTime, StringFormat=\{0:Ak\\tuali\\sier\\t: dd.MM.yyyy HH:mm U\\hr\}}" Grid.Row="1" Grid.ColumnSpan="2" Foreground="White"/>
                <TextBlock Text="{Binding Weather.Temperature}" Grid.Row="2" Grid.Column="0" Foreground="White" FontSize="30"/>
                <Grid Grid.Row="2" Grid.RowSpan="2" Grid.Column="1" Margin="0,2,10,10" VerticalAlignment="Top">
                    <Image Source="{Binding Weather.ImageSource}" VerticalAlignment="Stretch" HorizontalAlignment="Left" Height="55" Margin="10,5,0,0"/>
                </Grid>
                <TextBlock Text="" Grid.Row="4"/>
                -->
            <!--Leerzeile-->
            <!--
                <TextBlock Text="{Binding Weather.Feel, StringFormat=Gefühlt: \{0\}}" Grid.Row="3" Grid.ColumnSpan="2" Foreground="White" VerticalAlignment="Top"/>
                <TextBlock Text="{Binding Weather.Low, StringFormat=Tiefsttemperatur: \{0\}}" Grid.Row="5" Grid.ColumnSpan="2" Foreground="White" />
                <TextBlock Text="{Binding Weather.High, StringFormat=Höchsttemperatur: \{0\}}" Grid.Row="6" Grid.ColumnSpan="2" Foreground="White" />
                <TextBlock Text="{Binding Weather.DewPoint, StringFormat=Taupunkt: \{0\}}" Grid.Row="7" Grid.ColumnSpan="2" Foreground="White" />
                <TextBlock Text="{Binding Weather.RelativeHumidity, StringFormat=Luftfeuchtigkeit: \{0\}}" Grid.Row="8" Grid.ColumnSpan="2" Foreground="White" />
                <TextBlock Text="{Binding Weather.Pressure, StringFormat=Luftdruck: \{0\}}" Grid.Row="11" Grid.ColumnSpan="2" Foreground="White" />
                <TextBlock Text="{Binding Weather.NextWeekDay}" Grid.Row="12" Grid.Column="0" Foreground="White"/>
                <TextBlock Text="{Binding Weather.NextDayInfo}" Grid.Row="13" Foreground="White"/>
                <Image Source="{Binding Weather.NextDayImageSource}" Grid.Row="12" Grid.RowSpan="2" Grid.Column="1" Height="25" HorizontalAlignment="Left"/>
                <TextBlock Text="{Binding Weather.OverNextWeekDay}" Grid.Row="14" Grid.Column="0" Foreground="White"/>
                <TextBlock  Text="{Binding Weather.OverNextDayInfo}" Grid.Row="15" Foreground="White"/>
                <Image Source="{Binding Weather.OverNextDayImageSource}" Grid.Row="14" Grid.RowSpan="2" Grid.Column="1" Height="25" HorizontalAlignment="Left"/>
                <TextBlock Text="{Binding Weather.OverOverNextWeekDay}" Grid.Row="16" Grid.Column="0" Foreground="White"/>
                <TextBlock Text="{Binding Weather.OverOverNextDayInfo}" Grid.Row="17" Foreground="White"/>
                <Image Source="{Binding Weather.OverOverNextDayImageSource}" Grid.Row="16" Grid.RowSpan="2" Grid.Column="1" Height="25" HorizontalAlignment="Left"/>
                
                <Grid Visibility="{Binding WeatherSpinnerVisibility}" Grid.Row="1" Grid.RowSpan="17" Grid.ColumnSpan="2" Background="{StaticResource VisualStudioDarkGray}">
                    <controls:SpinnerControl2 VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Grid>
            </Grid>-->
        </Grid>
        <Grid Visibility="{Binding LoadingScreenVisibility}" 
              Grid.Row="1" 
              Background="{StaticResource VisualStudioDarkGray}">
            <Grid Grid.ColumnSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <controls:SpinnerControl Grid.Row="0" VerticalAlignment="Bottom"/>
                <Label Content="Aktualisiere Daten..." Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Row="1"/>
            </Grid>
        </Grid>
    </Grid>
</Window>
